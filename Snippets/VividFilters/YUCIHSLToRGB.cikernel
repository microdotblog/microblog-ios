float hue2rgb(float p, float q, float t){
    if(t < 0.0) t += 1.0;
    if(t > 1.0) t -= 1.0;
    if(t < 1.0/6.0) return p + (q - p) * 6.0 * t;
    if(t < 1.0/2.0) return q;
    if(t < 2.0/3.0) return p + (q - p) * (2.0/3.0 - t) * 6.0;
    return p;
}

kernel vec4 hsl2rgb(__sample inputColor)
{
    vec4 color = clamp(inputColor,vec4(0.0),vec4(1.0));

    float h = color.r;
    float s = color.g;
    float l = color.b;

    float r,g,b;
    if(s <= 0.0){
        r = g = b = l;
    }else{
        float q = l < 0.5 ? (l * (1.0 + s)) : (l + s - l * s);
        float p = 2.0 * l - q;
        r = hue2rgb(p, q, h + 1.0/3.0);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1.0/3.0);
    }
    return vec4(r,g,b,color.a);
}
